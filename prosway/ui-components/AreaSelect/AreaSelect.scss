@import '~_styles/variables.scss';

:local {
  .AreaSelect {
    width: 100%;
    height: $heightInput;
    position: relative;
    overflow: visible;
    z-index: 2;
    cursor: pointer;

    &FullScreen {
      background-color: $colorWhite;
      width: 100%;
      height: 100%;

      .Close {
        position: relative;
        left: 100%;
        margin-top: $step;
        transform: translateX(-200%);
        width: 24px;

        svg {
          width: 24px;
          height: 24px;
          fill: $colorLinks;
        }
      }

      &Overlay {
        display: flex;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: $zIndexOverlay;
        background-color: $colorWhite;
      }
    }

    .Drop{
      display: none;
      position: absolute;
      width: 100%;
      max-height: 400px;
      overflow-x: hidden;
      overflow-y: hidden;
      position: absolute;
      border-radius: 3px;
      top: calc(#{$heightInput} + 8px);
      background-color: $colorWhite;
      box-shadow: 0 12px 24px 0 rgba(0, 0, 0, 0.12);
      border: solid 1px $colorLayout;

      &.isOpen {
          display: block;
      }


      &Panel{
        position: absolute;
        width: 100%;
        height: 47px;
        top: 0;
        background-color: $colorWhite;
      }
    }

    .Field {
      box-sizing: border-box;
      border-radius: 3px;
      background-color: $colorWhite;
      width: 100%;
      height: 100%;
      border: solid 1px $colorLighterGray;
      position: relative;
      display: flex;
      align-items: center;
      justify-content: space-between;

      ._withPlaceholder & {
        justify-content: flex-start;
      }

      ._focus & {
        border: solid 1px $colorPurpleLight;
      }

      ._error & {
        border: solid 1px $colorError;
      }

      &Info {
        min-width: calc(100% - 32px);
        display: flex;
        align-items: center;
        justify-content: space-between;

        &._hasValue {
          min-width: calc(100% - 32px);
        }
      }
    }

    .Label {
      padding: 9px 8px 9px 16px;
      font-weight: 400;
      font-size: 15px;
    }

    .Value {
      width: 70%;
      min-width: 50%;

      ._withPlaceholder & {
        width: 100%;
      }
    }
    .ValueText {
      max-width: 100%;
      padding: 9px 8px 9px 8px;
      font-weight: 400;
      font-size: 15px;
      color: $colorText;
      text-align: right;
      text-overflow: ellipsis;
      overflow: hidden;

      span {
        display: inline-block;
      }

      ._withPlaceholder & {
        text-align: left;
        padding-left: 16px;
      }

      .UserSelect & {
        display: flex;
        flex-direction: row;
      }
    }

    .Placeholder {
      @extend .ValueText;
      color: $colorPlaceholder;
    }

    .ButtonZone {
      min-width: 32px;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }

    .Arrow {
      border-color: #999 transparent transparent;
      border-style: solid;
      border-width: 5px 5px 2.5px;
      margin-top: 2.5px;
      display: inline-block;
      height: 0;
      width: 0;
      position: relative;
    }

    .Clear {
      width: 14px;
      height: 14px;

      svg {
        width: 14px;
        height: 14px;
      }
    }

    .hiddenInput {
      opacity: 0;
      position: absolute;
    }

    .hiddenInputContainer {
      position: absolute;
      width: 0;
      height: 1em;
      overflow: hidden;
    }

    .Error {
      font-size: 12px;
      font-weight: 500;
      color: $colorError;
      margin-left: 16px;
      padding-top: 4px;
    }
  }
}

